#! /usr/bin/env python3

import argparse
import json
import os
from decimal import Decimal
import logging.config
from savoia.engine.engine import Engine


def setup_logging() -> None:
    """Setup logging configuration"""
    path = os.path.join(os.path.dirname(__file__),
        'logging.json')
    if os.path.isfile(path):
        with open(path, 'rt') as f:
            config = json.load(f)
            logging.config.dictConfig(config)
    else:
        raise FileNotFoundError('Not exist : %s' % path)


def main() -> None:
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(
        title='subcommands',
        description='Available subcommands: backtest'
    )

    parser_backtest = subparsers.add_parser('backtest', help='run backtest')
    parser_backtest.add_argument(
        'config_file',
        default='savoia.conf',
        help='config file for backtest'
    )
    parser_backtest.set_defaults(isBacktest=True)

    args = parser.parse_args()

    if args.isBacktest:
        if os.path.dirname(args.config_file):
            path = os.path.join(os.curdir, args.config_file)
        else:
            path = os.path.join(os.path.dirname(__file__), args.config_file)

        if os.path.isfile(path):
            with open(path, 'rt') as f:
                params = json.load(f, parse_float=Decimal, parse_int=Decimal)
                print(params)
        else:
            raise FileNotFoundError(path)

        eg = Engine(
            engine=params['engine'],
            datafeed=params['datafeed'],
            execution=params['execution'],
            strategy=params['strategy'],
            result=params['result']
        )

        setup_logging()
        eg.run()


if __name__ == '__main__':
    main()
